<!DOCTYPE html>
<html lang="en">

<head>
  <title>Quiz SOGIESC</title>
  <!-- Required meta tags -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <script src="https://code.jquery.com/jquery-3.5.1.js" integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc="
    crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" />


  <script src="https://kit.fontawesome.com/91998e0ee4.js" crossorigin="anonymous"></script>
  <link media="all" rel="stylesheet" href="css/main.css" />
  <link media="all" rel="stylesheet" href="css/animation.css" />
</head>

<body>
  <div class="container-fluid" id="page_container">
    <div class="container-fluid__items" id="content-wrap">
      <div id="content_two" class="container-fluid__items__content">
        <div class="content-question mb-2">
          <div class="row">
            <div class="col-sm-12 col-md-4 col-lg-4 p-0">
              <div class="content-question__itemLeft">
                <div class="content-question__mascot">
                  <img src="./images/Default2.png" alt="tempMascot" class="content-question__mascot-img" />
                </div>
              </div>
            </div>
            <div class="col-sm-12 col-md-8 col-lg-8 p-0 content-question--res">
              <div class="content-question__itemRight">
                <div class="content-question__boxChat">
                  <div id="alert-box"></div>
                  <div id="frame" role="content" class="content-question__boxChat-frame"></div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="content-answer">
          <div class="content-answer__item">
            <ul id="child__answer" class="content-answer__list"></ul>
            <div class="content-answer__avatar">
              <div class="content-answer__avatar-img"></div>
            </div>
          </div>
        </div>
      </div>
      <footer class="FOOTER row font-l justify-content-space-between">
        <div class="links d-flex justify-content-around col-6 col-md-4">
          <a href="https://vnyouthally.org/#vechungtoi-1">About Us</a>
          <span>|</span>
          <a href="#">Contact Us</a>
        </div>
        <div class="icons d-flex justify-content-around flex-row col-6 col-md-4">
          <div>Follow us</div>
          <a href="#"><i class="fab fa-facebook"></i></a>
          <a href="#"><i class="fas fa-globe-asia"></i></a>
        </div>
      </footer>
    </div>
  </div>
  {{!-- <footer class="FOOTER row font-l justify-content-space-between" id="footer-outside">
    <div class="links d-flex justify-content-around col-6 col-md-4">
      <a href="https://vnyouthally.org/#vechungtoi-1">About Us</a>
      <span>|</span>
      <a href="#">Contact Us</a>
    </div>
    <div class="icons d-flex justify-content-around flex-row col-5 col-md-3">
      <div>Follow us</div>
      <a href="#"><i class="fab fa-facebook"></i></a>
      <a href="#"><i class="fas fa-globe-asia"></i></a>
    </div>
  </footer> --}}

  <!-- Optional JavaScript -->
  <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  <!-- <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script> -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
    integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
    crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
    integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
    crossorigin="anonymous"></script>
  <script type="text/javascript" src="./js/Questions.js"></script>


  
  <script type="text/javascript" src="./js/QuestionManager.js"></script>
  <!-- <script
      type="text/javascript"
      src="./js/SecondaryQuestionGenerator.js"
    ></script> -->
  <script>
    function getWidth() {
      console.log(window.innerWidth);
    }
    getWidth();

    let playButton = document.getElementById("playBtn");
    playButton.addEventListener("click", () => {
      document.getElementById("content_one").style.display = "none";
      document.getElementById("content_two").style.display = "flex";
      document.getElementById("page_container").style.height = "fit-content";
      document.getElementById("footer-outside").style.display = "none";
      let footerStyle = document.getElementsByClassName("FOOTER")[0].style;
      footerStyle.marginTop = "2%";
      footerStyle.width = window.innerWidth;
      // console.log(window.innerWidth);
      playButton.remove();
    });




  </script>
  <script type="text/javascript">
    class QuestionGenerator {
      constructor(questions) {
        this.questions = questions;
        this.answer = null; //new Array(19).fill(0)
        this.result = null;
        this.currentquestion = -1;
        this.lookUpEndPoint = "/api/result";
        // this._addChoices = this._addChoices.bind(this);
        this._setupButtons = this._setupButtons.bind(this);
        this._nextQuestion = this._nextQuestion.bind(this);
        this._processQuestion = this._processQuestion.bind(this);
        if (
          typeof this.questions !== "undefined" &&
          $.type(this.questions) === "array"
        ) {
          //add pager
          $(document.createElement("p"))
            .addClass("pager")
            .attr("id", "pager")
            .text("Question 1 of " + this.questions.length)
            .appendTo("#frame");
          //add first question
          $(document.createElement("h4"))
            .addClass("question")
            .attr("id", "question")
            .text(this.questions[0]["question"])
            .appendTo("#frame");
          //add image if present
          if (
            this.questions[0].hasOwnProperty("image") &&
            this.questions[0]["image"] != ""
          ) {
            $(document.createElement("img"))
              .addClass("question-image")
              .attr("id", "question-image")
              .attr("src", this.questions[0]["image"])
              .attr("alt", htmlEncode(this.questions[0]["question"]))
              .appendTo("#frame");
          }
          //add choices
          this._nextQuestion();
          // this._addChoices(this.questions[0]["choices"]);

          // this._setupButtons();
        }
      }
      _addChoices(choices) {
        // if(typeof choices !== "undefined" && typeof choices == "object")
        {
          $("#child__answer").empty();
          // for(var i=0;i<choices.length; i++){
          //     $(document.createElement('li')).addClass('choice choice-box').attr('data-index', i).text(choices[i]).appendTo('#child__answer');
          // }
          for (let i in choices) {
            $(document.createElement("li"))
              .addClass("choice itemAns child__ans__item")
              .attr("data-index", choices[i])
              .text(i)
              .appendTo("#child__answer");
          }

          //add submit button
          $(document.createElement("div"))
            .addClass("choice-box")
            .attr("id", "submitbutton")
            .html("NEXT QUESTION &raquo;")
            .css({ "font-weight": 600, color: "white" })
            .appendTo("#child__answer");
        }
      }

      _nextQuestion() {
        let currentquestion = this.currentquestion;
        currentquestion += 1;
        $("#question").val;
        $("#question").text(this.questions[currentquestion]["question"]);
        $("#pager").text(
          "Question " + Number(currentquestion + 1) + " of " + this.questions.length
        );
        this._addChoices(this.questions[currentquestion]["choices"]);
        this.currentquestion = currentquestion;
        this._setupButtons();
      }

      _processQuestion(choice) {
        // this.answer[choice] = 1;
        throw new Error("You have to implement method _processQuesiont");
      }

      _dispatchFinishedEvent(result) {
        document.dispatchEvent(
          new CustomEvent("primary-finished", { detail: result })
        );
      }
      _setupButtons() {
        var score = 0,
          submt = true,
          picked,
          self = this;
        $(".choice").on("mouseover", function () {
          $(this).css({ "background-color": "#e1e1e1" });
        });

        $(".choice").on("mouseout", function () {
          $(this).css({ "background-color": "#fff" });
        });

        $(".choice").on("click", function () {
          let picked = $(this).attr("data-index");
          $(".choice").removeAttr("style").off("mouseout mouseover");
          $(this).css({
            "border-color": "#222",
            "font-weight": 500,
            "background-color": "#c1c1c1",
          });
          //   if (submt) {
          // submt = false;
          $("#submitbutton")
            .css({ color: "#000" })
            .on("click", () => {
              $(".choice").off("click");
              $("#submitbutton").off("click");
              self._processQuestion(picked);
              if (self.currentquestion == self.questions.length - 1) {
                self._getResult((result) => {
                  self._printResult(result.result);
                  self._endQuiz();
                  self._dispatchFinishedEvent(result);
                });
              } else self._nextQuestion();
            });
          //   }
        });
      }

      _printResult(res) {
        console.log(res);
        $(document.createElement("h3"))
          .css({ "text-align": "center", "font-size": "2em" })
          .text("ban la: " + res)
          .appendTo("#alert-box");
      }

      _getResult(cb) {
        let binary_answer = this.answer;
        this.answer = parseInt(binary_answer.join(""), 2);
        let json_data = { key: this.answer };
        var self = this;
        console.log(json_data);
        $.ajax({
          url: self.lookUpEndPoint,
          type: "GET",
          data: json_data,
          // dataType: "application/json; charset=utf-8",
        })
          .done((result) => {
            let data = {
              answer: binary_answer,
              result: result,
            };
            console.log(this.answer);
            cb(data);
          })
          .fail(() => {
            this._printResult("Sorry sth went wrong");
          });
      }
      _endQuiz() {
        $("#question").empty();
        $("#child__answer").empty();
        $("#submitbutton").remove();
        $("#frame").remove();
        // this.answer = this.answer.join("");
        // let binary_answer = this.answer;
        // let decimal_converted_answer = parseInt(binary_answer, 2);
        // let json_data = { key: decimal_converted_answer };
      }
    }
    class PrimaryQuestionsGenerator extends QuestionGenerator {
      constructor(questions) {
        super(questions);
        this.answer = new Array(19).fill(0);
      }

      _processQuestion(choice) {
        this.answer[choice] = 1;
      }

      _endQuiz() {
        $("#question").empty();
        $("#child__answer").empty();
        $("#submitbutton").remove();
        // $("#frame").remove();
      }
    }
    class SecondaryQuestionsGenerator extends QuestionGenerator {
      // constructor(questions) {
      //   $("#frame").empty();
      //   super(questions);
      //   this.answer = new Array(34).fill(0);
      //   this.lookUpEndPoint = "/api/spec-result";
      // }

      constructor(questions, ignoredQuestionIndices) {
        $("#frame").empty();
        super(questions);
        console.log(questions);
        this.answer = new Array(32).fill(0);
        ignoredQuestionIndices.forEach((i) => {
          this.answer[i] = 1;
        });

        // console.log("ignoredQuestionIndices", ignoredQuestionIndices);
        console.log(this.answer.join(""));
        this.lookUpEndPoint = "/api/spec-result";
      }

      // _nextQuestion()
      _processQuestion(choice) {
        if (this.currentquestion > -1) $("#alert-box").empty();
        // check if user want to answers the extra questions
        if (choice == 2) this.currentquestion += 2;
        else if (choice == 18) this.currentquestion == this.questions.length;
        this.answer[choice] = 1;
      }
      _endQuiz() {
        $("#question").empty();
        $("#child__answer").empty();
        $("#submitbutton").remove();
        $("#frame").remove();
      }
      _dispatchFinishedEvent(result) {
        document.dispatchEvent(new CustomEvent("finished", { detail: result }));
      }
    }


  </script>
</body>

</html>